# Generated by Django 2.1.4 on 2019-11-27 15:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0025_auto_20191122_1219'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppJunior',
            fields=[
                ('junior_id', models.UUIDField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('date_of_birth', models.DateField()),
                ('profile_pic_url', models.CharField(blank=True, max_length=200, null=True)),
                ('overall_rating', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('is_active', models.BooleanField()),
                ('is_reco_created', models.BooleanField(blank=True, null=True)),
                ('reco_created_at', models.DateTimeField(blank=True, null=True)),
                ('is_reco_updated', models.BooleanField(blank=True, null=True)),
                ('reco_updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_reco_deleted', models.BooleanField(blank=True, null=True)),
                ('reco_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'app_junior',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppsVersion',
            fields=[
                ('version_id', models.UUIDField(primary_key=True, serialize=False)),
                ('os', models.CharField(max_length=15)),
                ('app_version', models.CharField(max_length=50)),
                ('is_force_upgrade', models.BooleanField()),
                ('version_code', models.CharField(blank=True, max_length=50, null=True)),
                ('min_version_code', models.CharField(blank=True, max_length=50, null=True)),
                ('min_app_version', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'apps_version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppUsermaster',
            fields=[
                ('app_user_id', models.UUIDField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('bio', models.CharField(blank=True, max_length=400, null=True)),
                ('user_title', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_id', models.UUIDField(unique=True)),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('profile_pic_url', models.CharField(blank=True, max_length=200, null=True)),
                ('overall_rating', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('is_event_creator', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('is_reco_created', models.BooleanField(blank=True, null=True)),
                ('reco_created_at', models.DateTimeField(blank=True, null=True)),
                ('is_reco_updated', models.BooleanField(blank=True, null=True)),
                ('reco_updated_at', models.DateTimeField(blank=True, null=True)),
                ('dob_reco', models.DateField(blank=True, null=True)),
                ('pincode_reco', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'app_usermaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErrorLogTable',
            fields=[
                ('error_id', models.UUIDField(primary_key=True, serialize=False)),
                ('function_name', models.CharField(blank=True, max_length=200, null=True)),
                ('error_code', models.CharField(blank=True, max_length=200, null=True)),
                ('error_msg', models.CharField(blank=True, max_length=500, null=True)),
                ('sub_id', models.UUIDField(blank=True, null=True)),
                ('other_info', models.CharField(blank=True, max_length=3000, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'error_log_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gendermaster',
            fields=[
                ('gender_id', models.UUIDField(primary_key=True, serialize=False)),
                ('gender_name', models.CharField(max_length=50, unique=True)),
                ('country', models.CharField(max_length=10)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'gendermaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Levelsmaster',
            fields=[
                ('level_id', models.UUIDField(primary_key=True, serialize=False)),
                ('level_name', models.CharField(max_length=30, unique=True)),
                ('country', models.CharField(max_length=10)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'levelsmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasses',
            fields=[
                ('class_id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=2056)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasspack',
            fields=[
                ('classpack_id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=2056)),
                ('service_type', models.CharField(max_length=50)),
                ('service_type_id', models.UUIDField()),
                ('business_id', models.UUIDField()),
                ('image_url', models.CharField(blank=True, max_length=700, null=True)),
                ('timezone', models.CharField(max_length=20)),
                ('currency', models.CharField(max_length=20)),
                ('price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('is_published', models.BooleanField()),
                ('is_disabled', models.BooleanField()),
                ('is_deleted', models.BooleanField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('classpack_type', models.CharField(max_length=50)),
                ('term_length', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('term_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_autobook', models.BooleanField()),
                ('credits', models.IntegerField(blank=True, null=True)),
                ('is_reco_created_updated', models.BooleanField(blank=True, null=True)),
                ('reco_created_updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_reco_deleted', models.BooleanField(blank=True, null=True)),
                ('reco_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classpack',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyEvent',
            fields=[
                ('event_id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=2056)),
                ('service_type', models.CharField(max_length=50)),
                ('service_type_id', models.UUIDField()),
                ('business_id', models.UUIDField()),
                ('image_url', models.CharField(blank=True, max_length=700, null=True)),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('currency', models.CharField(max_length=20)),
                ('min_price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('max_price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('timezone', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_date', models.DateField()),
                ('end_time', models.TimeField()),
                ('is_published', models.BooleanField()),
                ('is_disabled', models.BooleanField()),
                ('is_deleted', models.BooleanField()),
                ('total_likes', models.IntegerField()),
                ('is_reco_created_updated', models.BooleanField(blank=True, null=True)),
                ('reco_created_updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_reco_deleted', models.BooleanField(blank=True, null=True)),
                ('reco_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyFacilityCategory',
            fields=[
                ('facility_category_id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=2056)),
                ('service_type', models.CharField(max_length=50)),
                ('service_type_id', models.UUIDField()),
                ('business_id', models.UUIDField()),
                ('image_url', models.CharField(blank=True, max_length=700, null=True)),
                ('timezone', models.CharField(max_length=20)),
                ('currency', models.CharField(max_length=20)),
                ('min_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('is_deleted', models.BooleanField()),
                ('is_reco_created_updated', models.BooleanField(blank=True, null=True)),
                ('reco_created_updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_reco_deleted', models.BooleanField(blank=True, null=True)),
                ('reco_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_facility_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('org_id', models.UUIDField(primary_key=True, serialize=False)),
                ('org_name', models.CharField(max_length=250)),
                ('org_email', models.CharField(max_length=150)),
                ('org_contact', models.CharField(max_length=20)),
                ('pan_no', models.CharField(max_length=40)),
                ('account_number', models.CharField(max_length=40)),
                ('ifsc_code', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('address', models.CharField(max_length=400)),
                ('city', models.CharField(max_length=200)),
                ('territory', models.CharField(max_length=200)),
                ('pincode', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=10)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rolesmaster',
            fields=[
                ('role_id', models.UUIDField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('country', models.CharField(max_length=10)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'rolesmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkipUserLogin',
            fields=[
                ('skip_user_id', models.UUIDField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('created_by', models.UUIDField()),
            ],
            options={
                'db_table': 'skip_user_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdvice',
            fields=[
                ('sport_advice_id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=600)),
                ('min_age', models.IntegerField()),
                ('max_age', models.IntegerField()),
                ('overall_rating', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('img_url', models.CharField(blank=True, max_length=500, null=True)),
                ('blog_url', models.CharField(max_length=500)),
                ('video_url', models.CharField(blank=True, max_length=500, null=True)),
                ('audio_url', models.CharField(blank=True, max_length=500, null=True)),
                ('reading_time', models.IntegerField(blank=True, null=True)),
                ('total_bookmarks', models.IntegerField()),
                ('total_likes', models.IntegerField()),
                ('total_comments', models.IntegerField()),
                ('bounce_rate', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('avg_time_spent', models.IntegerField(blank=True, null=True)),
                ('page_view', models.IntegerField(blank=True, null=True)),
                ('sphere_id', models.UUIDField(blank=True, null=True)),
                ('sphere_created_date', models.DateTimeField(blank=True, null=True)),
                ('sphere_updated_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceCategoryMaster',
            fields=[
                ('category_id', models.UUIDField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_category_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceSeasonalityMaster',
            fields=[
                ('seasonality_id', models.UUIDField(primary_key=True, serialize=False)),
                ('seasonality_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_seasonality_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceSourceTypeMaster',
            fields=[
                ('source_type_id', models.UUIDField(primary_key=True, serialize=False)),
                ('source_type_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_source_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceTopicMaster',
            fields=[
                ('topic_id', models.UUIDField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_topic_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Targetsmaster',
            fields=[
                ('target_id', models.UUIDField(primary_key=True, serialize=False)),
                ('target_name', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=10)),
                ('is_system_created', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'targetsmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxmaster',
            fields=[
                ('tax_id', models.UUIDField(primary_key=True, serialize=False)),
                ('tax_name', models.CharField(max_length=50, unique=True)),
                ('tax_percent', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('country', models.CharField(max_length=10)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'taxmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VerificationStatusMaster',
            fields=[
                ('status_id', models.UUIDField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=60, unique=True)),
                ('country', models.CharField(max_length=10)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'verification_status_master',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='ClassMaster',
        ),
        migrations.DeleteModel(
            name='ClassSport',
        ),
        migrations.DeleteModel(
            name='EventMaster',
        ),
        migrations.DeleteModel(
            name='EventSport',
        ),
        migrations.DeleteModel(
            name='FacilityMaster',
        ),
        migrations.DeleteModel(
            name='FacilitySport',
        ),
        migrations.DeleteModel(
            name='StoreDetails',
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AlterModelOptions(
            name='sportsmaster',
            options={'managed': False},
        ),
        migrations.RemoveField(
            model_name='selection',
            name='userid',
        ),
        migrations.CreateModel(
            name='AppJuniorSportPref',
            fields=[
                ('junior', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.AppJunior')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'app_junior_sport_pref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppJuniorTargetPref',
            fields=[
                ('junior', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.AppJunior')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'app_junior_target_pref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppUserSportPref',
            fields=[
                ('sub', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.AppUsermaster')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'app_user_sport_pref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppUserTargetPref',
            fields=[
                ('sub', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.AppUsermaster')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'app_user_target_pref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventLikes',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyEvent')),
                ('is_liked', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClassesDaysOfWeek',
            fields=[
                ('class_field', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyClasses')),
                ('day_of_week', models.CharField(max_length=50)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classes_days_of_week',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasspackAgeGroup',
            fields=[
                ('classpack', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyClasspack')),
                ('age_group', models.CharField(max_length=50)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classpack_age_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasspackClassesMapping',
            fields=[
                ('classpack', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyClasspack')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classpack_classes_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasspackLevels',
            fields=[
                ('classpack', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyClasspack')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classpack_levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasspackSports',
            fields=[
                ('classpack', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyClasspack')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classpack_sports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyClasspackTargets',
            fields=[
                ('classpack', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyClasspack')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_classpack_targets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyEventAgeGroup',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyEvent')),
                ('age_group', models.CharField(max_length=50)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_event_age_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyEventLevels',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyEvent')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_event_levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyEventSports',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyEvent')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_event_sports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyEventTargets',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyEvent')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_event_targets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyFacility',
            fields=[
                ('facility_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyFacilityCategory')),
                ('facility_id', models.UUIDField()),
                ('title', models.CharField(max_length=2056)),
                ('is_published', models.BooleanField()),
                ('is_disabled', models.BooleanField()),
                ('is_deleted', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_facility',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyFacilityAgeGroup',
            fields=[
                ('facility_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyFacilityCategory')),
                ('age_group', models.CharField(max_length=50)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_facility_age_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyFacilityLevels',
            fields=[
                ('facility_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyFacilityCategory')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_facility_levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyFacilitySports',
            fields=[
                ('facility_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyFacilityCategory')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_facility_sports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OmnifyFacilityTargets',
            fields=[
                ('facility_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.OmnifyFacilityCategory')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'omnify_facility_targets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceLikesBookmarks',
            fields=[
                ('sport_advice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.SportsAdvice')),
                ('is_liked', models.BooleanField(blank=True, null=True)),
                ('is_bookmarked', models.BooleanField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_likes_bookmarks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceSportLevelAssociation',
            fields=[
                ('sport_advice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.SportsAdvice')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_sport_level_association',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceTarget',
            fields=[
                ('sport_advice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.SportsAdvice')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_target',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAdviceTopic',
            fields=[
                ('sport_advice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='users.SportsAdvice')),
                ('is_active', models.BooleanField()),
                ('created_by', models.UUIDField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.UUIDField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sports_advice_topic',
                'managed': False,
            },
        ),
    ]
